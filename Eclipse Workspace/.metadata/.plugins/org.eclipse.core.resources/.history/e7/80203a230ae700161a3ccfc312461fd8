//life.c -- Niko Gamarra
#include <stdio.h>
#include <stdlib.h>
#include "Life.h"
#include "Game.h"
#include "Board.h"
char print = 'n';
char pause = 'n';
int main(int argc, char * argv[]) {

	if (argc < 5) {
		printf("ERROR: Too few args.\n");
	} else if (argc > 7) {
		printf("ERROR: Too many args.\n");

	} else {

		//set up variables
		int x, y, gens;
		//printf(argc[0]);
		x = atoi(argv[1]);
		y = atoi(argv[2]);
		gens = atoi(argv[3]);
		if (argc > 5) {
			print = atoi(argv[5]);
			if (argc > 6) {
				pause = atoi(argv[6]);
			}
		}
		char **Old;
		unsigned int i;
		Old = malloc(x * sizeof(char *));
		if (Old)
			for (i = 0; i < x; i++) {
				Old[i] = malloc(y * sizeof(char));
				if (!Old[i]) {
					exit(-1);
					printf("Error: malloc error 1\n");
				}
			}

		char **New;
		New = malloc(x * sizeof(char *));
		if (New)
			for (i = 0; i < x; i++) {
				New[i] = malloc(y * sizeof(char));
				if (!New[i]) {
					exit(-1);
					printf("Error: malloc error 2\n");
				}
			}

		ZeroBoard(x, y, New);
		ZeroBoard(x, y, Old);

		FILE *input;
		input = (fopen(argv[4], "r"));
		if (!input) {
			printf("ERROR: File not found.");
		} else {

			// put txt into old
			char ch1 = 0, charWidth = 0, lines = 0,k=0;
			char rawCharacters[];
			do {
k++;
				ch1 = fgetc(input);
				//printf("%d",ch1);
				if (ch1 == 'o' || ch1 == 'x')
					rawCharacters[k]=ch1;
					charWidth++;
				if (ch1 == '\n') {
					lines++;

				}
			} while (ch1 != EOF);
			lines--;
			charWidth = charWidth / lines;
			printf("Input Width: %d\n", charWidth);
			printf("Input Height: %d\n", lines);
			lines = lines + 4;
			charWidth = charWidth + 4;
			printf("Input Width: %d\n", charWidth);
			printf("Input Height: %d\n", lines);
			char **tempArray;
					unsigned int h;
					tempArray = malloc(charWidth * sizeof(char *));
					if (tempArray)
						for (h = 0; h < charWidth; h++) {
							tempArray[h] = malloc(lines * sizeof(char));
							if (!tempArray[h]) {
								exit(-1);
								printf("Error: malloc error 1\n");
							}
						}


			ZeroBoard(charWidth , lines , tempArray);

			PrintBoard(charWidth, lines, tempArray);
		}
		PlayGame(x, y, gens, Old, New);
	}
}

int getPrint() {
	if (print == 'y' || print == 'Y')
		return 1;
	else {
		return 0;
	}
}
int getPause() {
	if (pause == 'y' || pause == 'Y')
		return 1;
	else {
		return 0;
	}
}
